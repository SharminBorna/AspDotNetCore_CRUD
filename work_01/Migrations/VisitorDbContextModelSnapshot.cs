// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using work_01.Models;

namespace work_01.Migrations
{
    [DbContext(typeof(VisitorDbContext))]
    partial class VisitorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("work_01.Models.City", b =>
                {
                    b.Property<int>("cId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("cId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("work_01.Models.Visitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("date");

                    b.Property<string>("VisitorName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("cId");

                    b.HasKey("Id");

                    b.HasIndex("cId");

                    b.ToTable("Visitors");
                });

            modelBuilder.Entity("work_01.Models.Visitor", b =>
                {
                    b.HasOne("work_01.Models.City", "City")
                        .WithMany("Visitors")
                        .HasForeignKey("cId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
